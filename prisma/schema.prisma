generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  name      String
  email     String    @unique
  phone     String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  role Role @default(user)
  properties Property[]
  blocked Boolean? @default(false)
  description String?

}

enum Role {
  admin
  user
}

model Property {
  id           Int      @id @default(autoincrement())
  title        String
  description  String
  address      String
  city         String
  price        Float
  area         Float?
  lotSize      Float?
  bedrooms     Int
  bathrooms    Float
  yearBuilt    Int?
  type         PropertyType
  listingType  ListingType
  features     Json?
  isFeatured   Boolean         @default(false)
  mainImageUri String
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @default(now())

  ownerId      Int
  owner        User            @relation(fields: [ownerId], references: [id])

  images       PropertyImage[]
  reports      PropertyReport[]
}

model PropertyImage {
  id           Int      @id @default(autoincrement())
  url        String
  order      Int
  createdAt  DateTime @default(now())

  propertyId   Int
  property     Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
}

enum PropertyType {
  Casa
  Apartamento
  Condominio
  Adosado
  Terreno
  ANY
}

enum ListingType {
  Venta
  Alquiler
  ANY
}

model PropertyReport {
  id          Int      @id @default(autoincrement())
  reason      String
  message     String?
  property    Property @relation(fields: [propertyId], references: [id])
  propertyId  Int
  createdAt   DateTime @default(now())
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  email     String
  token     String   @unique
  expiresAt DateTime
}
